[project]
name = "bz-cli"
version = "0.1.0"
description = "A tool for reproducible and efficient training of AI models."
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.10"

dependencies = [
    "numpy>=2.2.5",
    "torch>=2.7.0",
    "torchvision>=0.22.0",
    "tqdm>=4.67.1",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "black",
    "ruff",
    "mypy",
    "ipython",
]

# Plugin-specific optional dependencies
optuna = ["optuna>=4.3.0"]
wandb = ["wandb>=0.15.0"]
tensorboard = ["tensorboard>=2.19.0"]
profiler = ["psutil>=5.9.0"]

# All plugins
all = [
    "optuna>=4.3.0",
    "wandb>=0.15.0", 
    "tensorboard>=2.19.0",
    "psutil>=5.9.0",
]

[project.scripts]
bz = "bz.cli:main"

[project.entry-points."bz.plugins"]
console_out = "bz.plugins.console_out:ConsoleOutPlugin"
early_stopping = "bz.plugins.early_stopping:EarlyStoppingPlugin"
optuna = "bz_optuna.optuna_plugin:OptunaPlugin"
wandb = "bz_wandb.wandb_plugin:WandBPlugin"
tensorboard = "bz_tensorboard.tensorboard_plugin:TensorBoardPlugin"
profiler = "bz_profiler.profiler_plugin:ProfilerPlugin"

[tool.hatch.build.targets.wheel]
packages = [
    "src/bz",
    "src/bz_optuna",
    "src/bz_wandb", 
    "src/bz_tensorboard",
    "src/bz_profiler"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "mkdocstrings[python]>=0.30.0",
    "types-tqdm>=4.67.0.20250809",
    "pymdown-extensions>=10.0.0",
    "pytest>=8.4.1",
    "ruff>=0.12.11",
    "black>=25.1.0",
    "mypy>=1.17.1",
    "types-psutil>=7.0.0.20250822",
    "mkdocs-bootswatch>=1.1",
]

[tool.ruff]
line-length = 120
target-version = "py313"

[tool.black]
line-length = 120

[tool.pytest.ini_options]
testpaths = ["tests"]
